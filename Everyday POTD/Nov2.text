389. Find the Difference
Easy

5069

487

Add to List

Share
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"



class Solution {
    public char findTheDifference(String s, String t) {
        char result = 0;
        for (char c : s.toCharArray()) {
            result ^= c;
        }
        for (char c : t.toCharArray()) {
            result ^= c;
        }
        return result;
    }
}

Here's the text format dry run for the `findTheDifference` method in the `Solution` class with example inputs:

**Example Inputs**:
- `s = "abcd"`
- `t = "abcde"`

**Step-by-Step Explanation**:

1. **Initialize** `result = 0`

2. **Process each character in `s`:**
   - Perform an XOR operation between `result` and each character's ASCII value.

    | Character (from `s`) | ASCII Value | `result ^= c` | `result` (after XOR) |
    |-----------------------|-------------|---------------|-----------------------|
    | `'a'`                | 97          | `0 ^ 97`     | 97                    |
    | `'b'`                | 98          | `97 ^ 98`    | 3                     |
    | `'c'`                | 99          | `3 ^ 99`     | 96                    |
    | `'d'`                | 100         | `96 ^ 100`   | 4                     |

3. **Process each character in `t`:**
   - Perform an XOR operation between `result` and each character in `t`.

    | Character (from `t`) | ASCII Value | `result ^= c` | `result` (after XOR) |
    |-----------------------|-------------|---------------|-----------------------|
    | `'a'`                | 97          | `4 ^ 97`     | 101                   |
    | `'b'`                | 98          | `101 ^ 98`   | 7                     |
    | `'c'`                | 99          | `7 ^ 99`     | 100                   |
    | `'d'`                | 100         | `100 ^ 100`  | 0                     |
    | `'e'`                | 101         | `0 ^ 101`    | 101                   |

4. **Final Result**:
   - After processing all characters in `s` and `t`, `result` equals `101`, the ASCII value of `'e'`.
   - The method returns `'e'`, identifying it as the extra character in `t`.

**Explanation of XOR Properties**:
- \(x \oplus x = 0\) (a number XORed with itself results in zero)
- \(x \oplus 0 = x\) (a number XORed with zero remains unchanged)

By using these properties, all characters in `s` cancel out with matching characters in `t`, leaving only the extra character in `t`.